openapi: 3.0.3
info:
  description: Merged API Documentation for Train Ticket System
  version: '1.0'
  title: Train Ticket System API
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
- name: web-mvc-links-handler
  description: Web Mvc Links Handler
- name: operation-handler
  description: Operation Handler
- name: admin-basic-info-controller
  description: Admin Basic Info Controller
- name: basic-error-controller
  description: Basic Error Controller
- name: ts-admin-basic-info-service
  description: Service name
- name: admin-order-controller
  description: Admin Order Controller
- name: ts-admin-order-service
  description: Service name
- name: admin-route-controller
  description: Admin Route Controller
- name: ts-admin-route-service
  description: Service name
- name: admin-travel-controller
  description: Admin Travel Controller
- name: ts-admin-travel-service
  description: Service name
- name: admin-user-controller
  description: Admin User Controller
- name: ts-admin-user-service
  description: Service name
- name: assurance-controller
  description: Assurance Controller
- name: ts-assurance-service
  description: Service name
- name: basic-controller
  description: Basic Controller
- name: ts-basic-service
  description: Service name
- name: cancel-controller
  description: Cancel Controller
- name: ts-cancel-service
  description: Service name
- name: config-controller
  description: Config Controller
- name: ts-config-service
  description: Service name
- name: consign-price-controller
  description: Consign Price Controller
- name: ts-consign-price-service
  description: Service name
- name: consign-controller
  description: Consign Controller
- name: ts-consign-service
  description: Service name
- name: contacts-controller
  description: Contacts Controller
- name: ts-contacts-service
  description: Service name
- name: execute-controlller
  description: Execute Controlller
- name: ts-execute-service
  description: Service name
- name: food-delivery-controller
  description: Food Delivery Controller
- name: ts-food-delivery-service
  description: Service name
- name: food-controller
  description: Food Controller
- name: ts-food-service
  description: Service name
- name: inside-payment-controller
  description: Inside Payment Controller
- name: ts-inside-payment-service
  description: Service name
- name: notification-controller
  description: Notification Controller
- name: ts-notification-service
  description: Service name
- name: order-other-controller
  description: Order Other Controller
- name: ts-order-other-service
  description: Service name
- name: order-controller
  description: Order Controller
- name: ts-order-service
  description: Service name
- name: payment-controller
  description: Payment Controller
- name: ts-payment-service
  description: Service name
- name: preserve-other-controller
  description: Preserve Other Controller
- name: ts-preserve-other-service
  description: Service name
- name: preserve-controller
  description: Preserve Controller
- name: ts-preserve-service
  description: Service name
- name: price-controller
  description: Price Controller
- name: ts-price-service
  description: Service name
- name: rebook-controller
  description: Rebook Controller
- name: ts-rebook-service
  description: Service name
- name: route-plan-controller
  description: Route Plan Controller
- name: ts-route-plan-service
  description: Service name
- name: route-controller
  description: Route Controller
- name: ts-route-service
  description: Service name
- name: seat-controller
  description: Seat Controller
- name: ts-seat-service
  description: Service name
- name: security-controller
  description: Security Controller
- name: ts-security-service
  description: Service name
- name: station-food-controller
  description: Station Food Controller
- name: ts-station-food-service
  description: Service name
- name: station-controller
  description: Station Controller
- name: ts-station-service
  description: Service name
- name: train-food-controller
  description: Train Food Controller
- name: ts-train-food-service
  description: Service name
- name: train-controller
  description: Train Controller
- name: ts-train-service
  description: Service name
- name: travel-plan-controller
  description: Travel Plan Controller
- name: ts-travel-plan-service
  description: Service name
- name: travel-controller
  description: Travel Controller
- name: ts-travel-service
  description: Service name
- name: travel-2-controller
  description: Travel 2 Controller
- name: ts-travel2-service
  description: Service name
- name: user-controller
  description: User Controller
- name: ts-user-service
  description: Service name
- name: wait-list-order-controller
  description: Wait List Order Controller
- name: ts-wait-order-service
  description: Service name
paths:
  /actuator:
    get:
      tags: [web-mvc-links-handler, ts-wait-order-service]
      summary: links
      operationId: ts-wait-order-service_linksUsingGET
      responses:
        '200':
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/actuator_Map_string_Link_'
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/actuator_Map_string_Link_'
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/actuator_Map_string_Link_'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /actuator/health:
    get:
      tags: [operation-handler, ts-wait-order-service]
      summary: handle
      operationId: ts-wait-order-service_handleUsingGET_1
      requestBody:
        $ref: '#/components/requestBodies/actuator_handleUsingGET_1Body'
      responses:
        '200':
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /actuator/health/**:
    get:
      tags: [operation-handler, ts-wait-order-service]
      summary: handle
      operationId: ts-wait-order-service_handleUsingGET
      requestBody:
        $ref: '#/components/requestBodies/actuator_handleUsingGET_1Body'
      responses:
        '200':
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /actuator/info:
    get:
      tags: [operation-handler, ts-wait-order-service]
      summary: handle
      operationId: ts-wait-order-service_handleUsingGET_2
      requestBody:
        $ref: '#/components/requestBodies/actuator_handleUsingGET_1Body'
      responses:
        '200':
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /api/v1/adminbasicservice/adminbasic/configs:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: getAllConfigs
      operationId: ts-admin-basic-info-service_getAllConfigsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    post:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: addConfig
      operationId: ts-admin-basic-info-service_addConfigUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Config'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    put:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: modifyConfig
      operationId: ts-admin-basic-info-service_modifyConfigUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Config'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/configs/{name}:
    delete:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: deleteConfig
      operationId: ts-admin-basic-info-service_deleteConfigUsingDELETE
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/contacts:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: getAllContacts
      operationId: ts-admin-basic-info-service_getAllContactsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    post:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: addContacts
      operationId: ts-admin-basic-info-service_addContactsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Contacts'
        description: c
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    put:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: modifyContacts
      operationId: ts-admin-basic-info-service_modifyContactsUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Contacts'
        description: mci
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/contacts/{contactsId}:
    delete:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: deleteContacts
      operationId: ts-admin-basic-info-service_deleteContactsUsingDELETE
      parameters:
      - name: contactsId
        in: path
        description: contactsId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/prices:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: getAllPrices
      operationId: ts-admin-basic-info-service_getAllPricesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    post:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: addPrice
      operationId: ts-admin-basic-info-service_addPriceUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_PriceInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    put:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: modifyPrice
      operationId: ts-admin-basic-info-service_modifyPriceUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_PriceInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/prices/{pricesId}:
    delete:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: deletePrice
      operationId: ts-admin-basic-info-service_deletePriceUsingDELETE
      parameters:
      - name: pricesId
        in: path
        description: pricesId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/stations:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: getAllStations
      operationId: ts-admin-basic-info-service_getAllStationsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    post:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: addStation
      operationId: ts-admin-basic-info-service_addStationUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Station'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    put:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: modifyStation
      operationId: ts-admin-basic-info-service_modifyStationUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Station'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/stations/{id}:
    delete:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: deleteStation
      operationId: ts-admin-basic-info-service_deleteStationUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/trains:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: getAllTrains
      operationId: ts-admin-basic-info-service_getAllTrainsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    post:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: addTrain
      operationId: ts-admin-basic-info-service_addTrainUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TrainType'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
    put:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: modifyTrain
      operationId: ts-admin-basic-info-service_modifyTrainUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_TrainType'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/adminbasic/trains/{id}:
    delete:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: deleteTrain
      operationId: ts-admin-basic-info-service_deleteTrainUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-basic-info-service
  /api/v1/adminbasicservice/welcome:
    get:
      tags: [admin-basic-info-controller, ts-admin-basic-info-service]
      summary: home
      operationId: ts-admin-basic-info-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-basic-info-service
  /error:
    get:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
    head:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingHEAD
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-wait-order-service
    post:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingPOST
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
    put:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingPUT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
    delete:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingDELETE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-wait-order-service
    options:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-wait-order-service
    patch:
      tags: [basic-error-controller, ts-wait-order-service]
      summary: error
      operationId: ts-wait-order-service_errorUsingPATCH
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-wait-order-service
  /api/v1/adminorderservice/adminorder:
    get:
      tags: [admin-order-controller, ts-admin-order-service]
      summary: getAllOrders
      operationId: ts-admin-order-service_getAllOrdersUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-order-service
    post:
      tags: [admin-order-controller, ts-admin-order-service]
      summary: addOrder
      operationId: ts-admin-order-service_addOrderUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-order-service
    put:
      tags: [admin-order-controller, ts-admin-order-service]
      summary: updateOrder
      operationId: ts-admin-order-service_updateOrderUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-order-service
  /api/v1/adminorderservice/adminorder/{orderId}/{trainNumber}:
    delete:
      tags: [admin-order-controller, ts-admin-order-service]
      summary: deleteOrder
      operationId: ts-admin-order-service_deleteOrderUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      - name: trainNumber
        in: path
        description: trainNumber
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-order-service
  /api/v1/adminorderservice/welcome:
    get:
      tags: [admin-order-controller, ts-admin-order-service]
      summary: home
      operationId: ts-admin-order-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-order-service
  /api/v1/adminrouteservice/adminroute:
    get:
      tags: [admin-route-controller, ts-admin-route-service]
      summary: getAllRoutes
      operationId: ts-admin-route-service_getAllRoutesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-route-service
    post:
      tags: [admin-route-controller, ts-admin-route-service]
      summary: addRoute
      operationId: ts-admin-route-service_addRouteUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_RouteInfo'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-route-service
  /api/v1/adminrouteservice/adminroute/{routeId}:
    delete:
      tags: [admin-route-controller, ts-admin-route-service]
      summary: deleteRoute
      operationId: ts-admin-route-service_deleteRouteUsingDELETE
      parameters:
      - name: routeId
        in: path
        description: routeId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-route-service
  /api/v1/adminrouteservice/welcome:
    get:
      tags: [admin-route-controller, ts-admin-route-service]
      summary: home
      operationId: ts-admin-route-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-route-service
  /api/v1/admintravelservice/admintravel:
    get:
      tags: [admin-travel-controller, ts-admin-travel-service]
      summary: getAllTravels
      operationId: ts-admin-travel-service_getAllTravelsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-travel-service
    post:
      tags: [admin-travel-controller, ts-admin-travel-service]
      summary: addTravel
      operationId: ts-admin-travel-service_addTravelUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TravelInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-travel-service
    put:
      tags: [admin-travel-controller, ts-admin-travel-service]
      summary: updateTravel
      operationId: ts-admin-travel-service_updateTravelUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_TravelInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-travel-service
  /api/v1/admintravelservice/admintravel/{tripId}:
    delete:
      tags: [admin-travel-controller, ts-admin-travel-service]
      summary: deleteTravel
      operationId: ts-admin-travel-service_deleteTravelUsingDELETE
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-travel-service
  /api/v1/admintravelservice/welcome:
    get:
      tags: [admin-travel-controller, ts-admin-travel-service]
      summary: home
      operationId: ts-admin-travel-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-travel-service
  /api/v1/adminuserservice/users:
    get:
      tags: [admin-user-controller, ts-admin-user-service]
      summary: getAllUsers
      operationId: ts-admin-user-service_getAllUsersUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-user-service
    post:
      tags: [admin-user-controller, ts-admin-user-service]
      summary: addUser
      operationId: ts-admin-user-service_addUserUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_UserDto'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-user-service
    put:
      tags: [admin-user-controller, ts-admin-user-service]
      summary: updateUser
      operationId: ts-admin-user-service_updateUserUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_UserDto'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-user-service
  /api/v1/adminuserservice/users/welcome:
    get:
      tags: [admin-user-controller, ts-admin-user-service]
      summary: home
      operationId: ts-admin-user-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-admin-user-service
  /api/v1/adminuserservice/users/{userId}:
    delete:
      tags: [admin-user-controller, ts-admin-user-service]
      summary: deleteUser
      operationId: ts-admin-user-service_deleteUserUsingDELETE
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-admin-user-service
  /api/v1/assuranceservice/assurance/orderid/{orderId}:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: findAssuranceByOrderId
      operationId: ts-assurance-service_findAssuranceByOrderIdUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: getAllAssurances
      operationId: ts-assurance-service_getAllAssurancesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances/assuranceid/{assuranceId}:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: getAssuranceById
      operationId: ts-assurance-service_getAssuranceByIdUsingGET
      parameters:
      - name: assuranceId
        in: path
        description: assuranceId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
    delete:
      tags: [assurance-controller, ts-assurance-service]
      summary: deleteAssurance
      operationId: ts-assurance-service_deleteAssuranceUsingDELETE
      parameters:
      - name: assuranceId
        in: path
        description: assuranceId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances/orderid/{orderId}:
    delete:
      tags: [assurance-controller, ts-assurance-service]
      summary: deleteAssuranceByOrderId
      operationId: ts-assurance-service_deleteAssuranceByOrderIdUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances/types:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: getAllAssuranceType
      operationId: ts-assurance-service_getAllAssuranceTypeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances/{assuranceId}/{orderId}/{typeIndex}:
    patch:
      tags: [assurance-controller, ts-assurance-service]
      summary: modifyAssurance
      operationId: ts-assurance-service_modifyAssuranceUsingPATCH
      parameters:
      - name: assuranceId
        in: path
        description: assuranceId
        required: true
        schema:
          type: string
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      - name: typeIndex
        in: path
        description: typeIndex
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/assurances/{typeIndex}/{orderId}:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: createNewAssurance
      operationId: ts-assurance-service_createNewAssuranceUsingGET
      parameters:
      - name: typeIndex
        in: path
        description: typeIndex
        required: true
        schema:
          type: integer
          format: int32
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
  /api/v1/assuranceservice/welcome:
    get:
      tags: [assurance-controller, ts-assurance-service]
      summary: home
      operationId: ts-assurance-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-assurance-service
  /api/v1/basicservice/basic/travel:
    post:
      tags: [basic-controller, ts-basic-service]
      summary: queryForTravel
      operationId: ts-basic-service_queryForTravelUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Travel'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-basic-service
  /api/v1/basicservice/basic/travels:
    post:
      tags: [basic-controller, ts-basic-service]
      summary: queryForTravels
      operationId: ts-basic-service_queryForTravelsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/api_Travel'
        description: infos
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-basic-service
  /api/v1/basicservice/basic/{stationName}:
    get:
      tags: [basic-controller, ts-basic-service]
      summary: queryForStationId
      operationId: ts-basic-service_queryForStationIdUsingGET
      parameters:
      - name: stationName
        in: path
        description: stationName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-basic-service
  /api/v1/basicservice/welcome:
    get:
      tags: [basic-controller, ts-basic-service]
      summary: home
      operationId: ts-basic-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-basic-service
  /api/v1/cancelservice/cancel/refound/{orderId}:
    get:
      tags: [cancel-controller, ts-cancel-service]
      summary: calculate
      operationId: ts-cancel-service_calculateUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-cancel-service
  /api/v1/cancelservice/cancel/{orderId}/{loginId}:
    get:
      tags: [cancel-controller, ts-cancel-service]
      summary: cancelTicket
      operationId: ts-cancel-service_cancelTicketUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      - name: loginId
        in: path
        description: loginId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-cancel-service
  /api/v1/cancelservice/welcome:
    get:
      tags: [cancel-controller, ts-cancel-service]
      summary: home
      operationId: ts-cancel-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-cancel-service
  /api/v1/configservice/configs:
    get:
      tags: [config-controller, ts-config-service]
      summary: queryAll
      operationId: ts-config-service_queryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-config-service
    post:
      tags: [config-controller, ts-config-service]
      summary: createConfig
      operationId: ts-config-service_createConfigUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Config'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-config-service
    put:
      tags: [config-controller, ts-config-service]
      summary: updateConfig
      operationId: ts-config-service_updateConfigUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Config'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-config-service
  /api/v1/configservice/configs/{configName}:
    get:
      tags: [config-controller, ts-config-service]
      summary: retrieve
      operationId: ts-config-service_retrieveUsingGET
      parameters:
      - name: configName
        in: path
        description: configName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-config-service
    delete:
      tags: [config-controller, ts-config-service]
      summary: deleteConfig
      operationId: ts-config-service_deleteConfigUsingDELETE
      parameters:
      - name: configName
        in: path
        description: configName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-config-service
  /api/v1/configservice/welcome:
    get:
      tags: [config-controller, ts-config-service]
      summary: home
      operationId: ts-config-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-config-service
  /api/v1/consignpriceservice/consignprice:
    post:
      tags: [consign-price-controller, ts-consign-price-service]
      summary: modifyPriceConfig
      operationId: ts-consign-price-service_modifyPriceConfigUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_ConsignPrice'
        description: priceConfig
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-price-service
  /api/v1/consignpriceservice/consignprice/config:
    get:
      tags: [consign-price-controller, ts-consign-price-service]
      summary: getPriceConfig
      operationId: ts-consign-price-service_getPriceConfigUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-price-service
  /api/v1/consignpriceservice/consignprice/price:
    get:
      tags: [consign-price-controller, ts-consign-price-service]
      summary: getPriceInfo
      operationId: ts-consign-price-service_getPriceInfoUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-price-service
  /api/v1/consignpriceservice/consignprice/{weight}/{isWithinRegion}:
    get:
      tags: [consign-price-controller, ts-consign-price-service]
      summary: getPriceByWeightAndRegion
      operationId: ts-consign-price-service_getPriceByWeightAndRegionUsingGET
      parameters:
      - name: weight
        in: path
        description: weight
        required: true
        schema:
          type: string
      - name: isWithinRegion
        in: path
        description: isWithinRegion
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-price-service
  /api/v1/consignpriceservice/welcome:
    get:
      tags: [consign-price-controller, ts-consign-price-service]
      summary: home
      operationId: ts-consign-price-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-price-service
  /api/v1/consignservice/consigns:
    post:
      tags: [consign-controller, ts-consign-service]
      summary: insertConsign
      operationId: ts-consign-service_insertConsignUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Consign'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
    put:
      tags: [consign-controller, ts-consign-service]
      summary: updateConsign
      operationId: ts-consign-service_updateConsignUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Consign'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
  /api/v1/consignservice/consigns/account/{id}:
    get:
      tags: [consign-controller, ts-consign-service]
      summary: findByAccountId
      operationId: ts-consign-service_findByAccountIdUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
  /api/v1/consignservice/consigns/order/{id}:
    get:
      tags: [consign-controller, ts-consign-service]
      summary: findByOrderId
      operationId: ts-consign-service_findByOrderIdUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
  /api/v1/consignservice/consigns/{consignee}:
    get:
      tags: [consign-controller, ts-consign-service]
      summary: findByConsignee
      operationId: ts-consign-service_findByConsigneeUsingGET
      parameters:
      - name: consignee
        in: path
        description: consignee
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
  /api/v1/consignservice/welcome:
    get:
      tags: [consign-controller, ts-consign-service]
      summary: home
      operationId: ts-consign-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-consign-service
  /api/v1/contactservice/contacts:
    get:
      tags: [contacts-controller, ts-contacts-service]
      summary: getAllContacts
      operationId: ts-contacts-service_getAllContactsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
    post:
      tags: [contacts-controller, ts-contacts-service]
      summary: createNewContacts
      operationId: ts-contacts-service_createNewContactsUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Contacts'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
    put:
      tags: [contacts-controller, ts-contacts-service]
      summary: modifyContacts
      operationId: ts-contacts-service_modifyContactsUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Contacts'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
  /api/v1/contactservice/contacts/account/{accountId}:
    get:
      tags: [contacts-controller, ts-contacts-service]
      summary: findContactsByAccountId
      operationId: ts-contacts-service_findContactsByAccountIdUsingGET
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
  /api/v1/contactservice/contacts/admin:
    post:
      tags: [contacts-controller, ts-contacts-service]
      summary: createNewContactsAdmin
      operationId: ts-contacts-service_createNewContactsAdminUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Contacts'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
  /api/v1/contactservice/contacts/welcome:
    get:
      tags: [contacts-controller, ts-contacts-service]
      summary: home
      operationId: ts-contacts-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
  /api/v1/contactservice/contacts/{contactsId}:
    delete:
      tags: [contacts-controller, ts-contacts-service]
      summary: deleteContacts
      operationId: ts-contacts-service_deleteContactsUsingDELETE
      parameters:
      - name: contactsId
        in: path
        description: contactsId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-contacts-service
  /api/v1/contactservice/contacts/{id}:
    get:
      tags: [contacts-controller, ts-contacts-service]
      summary: getContactsByContactsId
      operationId: ts-contacts-service_getContactsByContactsIdUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-contacts-service
  /api/v1/executeservice/execute/collected/{orderId}:
    get:
      tags: [execute-controlller, ts-execute-service]
      summary: collectTicket
      operationId: ts-execute-service_collectTicketUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-execute-service
  /api/v1/executeservice/execute/execute/{orderId}:
    get:
      tags: [execute-controlller, ts-execute-service]
      summary: executeTicket
      operationId: ts-execute-service_executeTicketUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-execute-service
  /api/v1/executeservice/welcome:
    get:
      tags: [execute-controlller, ts-execute-service]
      summary: home
      operationId: ts-execute-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-execute-service
  /api/v1/fooddeliveryservice/orders:
    post:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: createFoodDeliveryOrder
      operationId: ts-food-delivery-service_createFoodDeliveryOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_FoodDeliveryOrder'
        description: fd
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/all:
    get:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: getAllFoodDeliveryOrders
      operationId: ts-food-delivery-service_getAllFoodDeliveryOrdersUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/d/{orderId}:
    delete:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: deleteFoodDeliveryOrder
      operationId: ts-food-delivery-service_deleteFoodDeliveryOrderUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/dtime:
    put:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: updateDeliveryTime
      operationId: ts-food-delivery-service_updateDeliveryTimeUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_DeliveryInfo'
        description: deliveryInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/seatno:
    put:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: updateSeatNo
      operationId: ts-food-delivery-service_updateSeatNoUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_SeatInfo'
        description: seatInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/store/{storeId}:
    get:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: getFoodDeliveryOrderByStoreId
      operationId: 
        ts-food-delivery-service_getFoodDeliveryOrderByStoreIdUsingGET
      parameters:
      - name: storeId
        in: path
        description: storeId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/tripid:
    put:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: updateTripId
      operationId: ts-food-delivery-service_updateTripIdUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TripOrderInfo'
        description: tripOrderInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/orders/{orderId}:
    get:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: getFoodDeliveryOrderById
      operationId: ts-food-delivery-service_getFoodDeliveryOrderByIdUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/fooddeliveryservice/welcome:
    get:
      tags: [food-delivery-controller, ts-food-delivery-service]
      summary: home
      operationId: ts-food-delivery-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-delivery-service
  /api/v1/foodservice/createOrderBatch:
    post:
      tags: [food-controller, ts-food-service]
      summary: createFoodBatches
      operationId: ts-food-service_createFoodBatchesUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/api_FoodOrder'
        description: foodOrderList
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
  /api/v1/foodservice/foods/{date}/{startStation}/{endStation}/{tripId}:
    get:
      tags: [food-controller, ts-food-service]
      summary: getAllFood
      operationId: ts-food-service_getAllFoodUsingGET
      parameters:
      - name: date
        in: path
        description: date
        required: true
        schema:
          type: string
      - name: startStation
        in: path
        description: startStation
        required: true
        schema:
          type: string
      - name: endStation
        in: path
        description: endStation
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
  /api/v1/foodservice/orders:
    get:
      tags: [food-controller, ts-food-service]
      summary: findAllFoodOrder
      operationId: ts-food-service_findAllFoodOrderUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
    post:
      tags: [food-controller, ts-food-service]
      summary: createFoodOrder
      operationId: ts-food-service_createFoodOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_FoodOrder'
        description: addFoodOrder
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
    put:
      tags: [food-controller, ts-food-service]
      summary: updateFoodOrder
      operationId: ts-food-service_updateFoodOrderUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_FoodOrder'
        description: updateFoodOrder
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
  /api/v1/foodservice/orders/{orderId}:
    get:
      tags: [food-controller, ts-food-service]
      summary: findFoodOrderByOrderId
      operationId: ts-food-service_findFoodOrderByOrderIdUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
    delete:
      tags: [food-controller, ts-food-service]
      summary: deleteFoodOrder
      operationId: ts-food-service_deleteFoodOrderUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-food-service
  /api/v1/foodservice/test_send_delivery:
    get:
      tags: [food-controller, ts-food-service]
      summary: test_send_delivery
      operationId: ts-food-service_test_send_deliveryUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
  /api/v1/foodservice/welcome:
    get:
      tags: [food-controller, ts-food-service]
      summary: home
      operationId: ts-food-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-food-service
  /api/v1/inside_pay_service/inside_payment:
    post:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: pay
      operationId: ts-inside-payment-service_payUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_PaymentInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/account:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: queryAccount
      operationId: ts-inside-payment-service_queryAccountUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
    post:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: createAccount
      operationId: ts-inside-payment-service_createAccountUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_AccountInfo'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/difference:
    post:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: payDifference
      operationId: ts-inside-payment-service_payDifferenceUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_PaymentInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/drawback/{userId}/{money}:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: drawBack
      operationId: ts-inside-payment-service_drawBackUsingGET
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      - name: money
        in: path
        description: money
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/money:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: queryAddMoney
      operationId: ts-inside-payment-service_queryAddMoneyUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/payment:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: queryPayment
      operationId: ts-inside-payment-service_queryPaymentUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/inside_payment/{userId}/{money}:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: addMoney
      operationId: ts-inside-payment-service_addMoneyUsingGET
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      - name: money
        in: path
        description: money
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/inside_pay_service/welcome:
    get:
      tags: [inside-payment-controller, ts-inside-payment-service]
      summary: home
      operationId: ts-inside-payment-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-inside-payment-service
  /api/v1/notifyservice/notification/order_cancel_success:
    post:
      tags: [notification-controller, ts-notification-service]
      summary: order_cancel_success
      operationId: ts-notification-service_order_cancel_successUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_NotifyInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/notification/order_changed_success:
    post:
      tags: [notification-controller, ts-notification-service]
      summary: order_changed_success
      operationId: ts-notification-service_order_changed_successUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_NotifyInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/notification/order_create_success:
    post:
      tags: [notification-controller, ts-notification-service]
      summary: order_create_success
      operationId: ts-notification-service_order_create_successUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_NotifyInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/notification/preserve_success:
    post:
      tags: [notification-controller, ts-notification-service]
      summary: preserve_success
      operationId: ts-notification-service_preserve_successUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_NotifyInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/test_send_mail:
    get:
      tags: [notification-controller, ts-notification-service]
      summary: test_send_mail
      operationId: ts-notification-service_test_send_mailUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/test_send_mq:
    get:
      tags: [notification-controller, ts-notification-service]
      summary: test_send
      operationId: ts-notification-service_test_sendUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/notifyservice/welcome:
    get:
      tags: [notification-controller, ts-notification-service]
      summary: home
      operationId: ts-notification-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-notification-service
  /api/v1/orderOtherService/orderOther:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: findAllOrder
      operationId: ts-order-other-service_findAllOrderUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
    post:
      tags: [order-other-controller, ts-order-other-service]
      summary: createNewOrder
      operationId: ts-order-other-service_createNewOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Order'
        description: createOrder
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
    put:
      tags: [order-other-controller, ts-order-other-service]
      summary: saveOrderInfo
      operationId: ts-order-other-service_saveOrderInfoUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Order'
        description: orderInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/admin:
    post:
      tags: [order-other-controller, ts-order-other-service]
      summary: addcreateNewOrder
      operationId: ts-order-other-service_addcreateNewOrderUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
    put:
      tags: [order-other-controller, ts-order-other-service]
      summary: updateOrder
      operationId: ts-order-other-service_updateOrderUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/orderPay/{orderId}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: payOrder
      operationId: ts-order-other-service_payOrderUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/price/{orderId}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: getOrderPrice
      operationId: ts-order-other-service_getOrderPriceUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/query:
    post:
      tags: [order-other-controller, ts-order-other-service]
      summary: queryOrders
      operationId: ts-order-other-service_queryOrdersUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_QueryInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/refresh:
    post:
      tags: [order-other-controller, ts-order-other-service]
      summary: queryOrdersForRefresh
      operationId: ts-order-other-service_queryOrdersForRefreshUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_QueryInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/security/{checkDate}/{accountId}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: securityInfoCheck
      operationId: ts-order-other-service_securityInfoCheckUsingGET
      parameters:
      - name: checkDate
        in: path
        description: checkDate
        required: true
        schema:
          type: string
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/status/{orderId}/{status}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: modifyOrder
      operationId: ts-order-other-service_modifyOrderUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: status
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/tickets:
    post:
      tags: [order-other-controller, ts-order-other-service]
      summary: getTicketListByDateAndTripId
      operationId: ts-order-other-service_getTicketListByDateAndTripIdUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Seat'
        description: seatRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/{orderId}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: getOrderById
      operationId: ts-order-other-service_getOrderByIdUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
    delete:
      tags: [order-other-controller, ts-order-other-service]
      summary: deleteOrder
      operationId: ts-order-other-service_deleteOrderUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/orderOther/{travelDate}/{trainNumber}:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: calculateSoldTicket
      operationId: ts-order-other-service_calculateSoldTicketUsingGET
      parameters:
      - name: travelDate
        in: path
        description: travelDate
        required: true
        schema:
          type: string
      - name: trainNumber
        in: path
        description: trainNumber
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderOtherService/welcome:
    get:
      tags: [order-other-controller, ts-order-other-service]
      summary: home
      operationId: ts-order-other-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-other-service
  /api/v1/orderservice/order:
    get:
      tags: [order-controller, ts-order-service]
      summary: findAllOrder
      operationId: ts-order-service_findAllOrderUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
    post:
      tags: [order-controller, ts-order-service]
      summary: createNewOrder
      operationId: ts-order-service_createNewOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Order'
        description: createOrder
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
    put:
      tags: [order-controller, ts-order-service]
      summary: saveOrderInfo
      operationId: ts-order-service_saveOrderInfoUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Order'
        description: orderInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/admin:
    post:
      tags: [order-controller, ts-order-service]
      summary: addcreateNewOrder
      operationId: ts-order-service_addcreateNewOrderUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
    put:
      tags: [order-controller, ts-order-service]
      summary: updateOrder
      operationId: ts-order-service_updateOrderUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Order'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/orderPay/{orderId}:
    get:
      tags: [order-controller, ts-order-service]
      summary: payOrder
      operationId: ts-order-service_payOrderUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/price/{orderId}:
    get:
      tags: [order-controller, ts-order-service]
      summary: getOrderPrice
      operationId: ts-order-service_getOrderPriceUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/query:
    post:
      tags: [order-controller, ts-order-service]
      summary: queryOrders
      operationId: ts-order-service_queryOrdersUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_OrderInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/refresh:
    post:
      tags: [order-controller, ts-order-service]
      summary: queryOrdersForRefresh
      operationId: ts-order-service_queryOrdersForRefreshUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_OrderInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/security/{checkDate}/{accountId}:
    get:
      tags: [order-controller, ts-order-service]
      summary: securityInfoCheck
      operationId: ts-order-service_securityInfoCheckUsingGET
      parameters:
      - name: checkDate
        in: path
        description: checkDate
        required: true
        schema:
          type: string
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/status/{orderId}/{status}:
    get:
      tags: [order-controller, ts-order-service]
      summary: modifyOrder
      operationId: ts-order-service_modifyOrderUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: status
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/tickets:
    post:
      tags: [order-controller, ts-order-service]
      summary: getTicketListByDateAndTripId
      operationId: ts-order-service_getTicketListByDateAndTripIdUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_Seat'
        description: seatRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/order/{orderId}:
    get:
      tags: [order-controller, ts-order-service]
      summary: getOrderById
      operationId: ts-order-service_getOrderByIdUsingGET
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
    delete:
      tags: [order-controller, ts-order-service]
      summary: deleteOrder
      operationId: ts-order-service_deleteOrderUsingDELETE
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-order-service
  /api/v1/orderservice/order/{travelDate}/{trainNumber}:
    get:
      tags: [order-controller, ts-order-service]
      summary: calculateSoldTicket
      operationId: ts-order-service_calculateSoldTicketUsingGET
      parameters:
      - name: travelDate
        in: path
        description: travelDate
        required: true
        schema:
          type: string
      - name: trainNumber
        in: path
        description: trainNumber
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/orderservice/welcome:
    get:
      tags: [order-controller, ts-order-service]
      summary: home
      operationId: ts-order-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-order-service
  /api/v1/paymentservice/payment:
    get:
      tags: [payment-controller, ts-payment-service]
      summary: query
      operationId: ts-payment-service_queryUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-payment-service
    post:
      tags: [payment-controller, ts-payment-service]
      summary: pay
      operationId: ts-payment-service_payUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Payment'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-payment-service
  /api/v1/paymentservice/payment/money:
    post:
      tags: [payment-controller, ts-payment-service]
      summary: addMoney
      operationId: ts-payment-service_addMoneyUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Payment'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-payment-service
  /api/v1/paymentservice/welcome:
    get:
      tags: [payment-controller, ts-payment-service]
      summary: home
      operationId: ts-payment-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-payment-service
  /api/v1/preserveotherservice/preserveOther:
    post:
      tags: [preserve-other-controller, ts-preserve-other-service]
      summary: preserve
      operationId: ts-preserve-other-service_preserveUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_OrderTicketsInfo'
        description: oti
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-preserve-other-service
  /api/v1/preserveotherservice/welcome:
    get:
      tags: [preserve-other-controller, ts-preserve-other-service]
      summary: home
      operationId: ts-preserve-other-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-preserve-other-service
  /api/v1/preserveservice/preserve:
    post:
      tags: [preserve-controller, ts-preserve-service]
      summary: preserve
      operationId: ts-preserve-service_preserveUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_OrderTicketsInfo'
        description: oti
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-preserve-service
  /api/v1/preserveservice/welcome:
    get:
      tags: [preserve-controller, ts-preserve-service]
      summary: home
      operationId: ts-preserve-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-preserve-service
  /api/v1/priceservice/prices:
    get:
      tags: [price-controller, ts-price-service]
      summary: queryAll
      operationId: ts-price-service_queryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
    post:
      tags: [price-controller, ts-price-service]
      summary: create
      operationId: ts-price-service_createUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_PriceConfig'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
    put:
      tags: [price-controller, ts-price-service]
      summary: update
      operationId: ts-price-service_updateUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_PriceConfig'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
  /api/v1/priceservice/prices/byRouteIdsAndTrainTypes:
    post:
      tags: [price-controller, ts-price-service]
      summary: query
      operationId: ts-price-service_queryUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: ridsAndTts
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
  /api/v1/priceservice/prices/welcome:
    get:
      tags: [price-controller, ts-price-service]
      summary: home
      operationId: ts-price-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
  /api/v1/priceservice/prices/{pricesId}:
    delete:
      tags: [price-controller, ts-price-service]
      summary: delete
      operationId: ts-price-service_deleteUsingDELETE
      parameters:
      - name: pricesId
        in: path
        description: pricesId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-price-service
  /api/v1/priceservice/prices/{routeId}/{trainType}:
    get:
      tags: [price-controller, ts-price-service]
      summary: query
      operationId: ts-price-service_queryUsingGET
      parameters:
      - name: routeId
        in: path
        description: routeId
        required: true
        schema:
          type: string
      - name: trainType
        in: path
        description: trainType
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-price-service
  /api/v1/rebookservice/rebook:
    post:
      tags: [rebook-controller, ts-rebook-service]
      summary: rebook
      operationId: ts-rebook-service_rebookUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_RebookInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-rebook-service
  /api/v1/rebookservice/rebook/difference:
    post:
      tags: [rebook-controller, ts-rebook-service]
      summary: payDifference
      operationId: ts-rebook-service_payDifferenceUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_RebookInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-rebook-service
  /api/v1/rebookservice/welcome:
    get:
      tags: [rebook-controller, ts-rebook-service]
      summary: home
      operationId: ts-rebook-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-rebook-service
  /api/v1/routeplanservice/routePlan/cheapestRoute:
    post:
      tags: [route-plan-controller, ts-route-plan-service]
      summary: getCheapestRoutes
      operationId: ts-route-plan-service_getCheapestRoutesUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_RoutePlanInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-plan-service
  /api/v1/routeplanservice/routePlan/minStopStations:
    post:
      tags: [route-plan-controller, ts-route-plan-service]
      summary: getMinStopStations
      operationId: ts-route-plan-service_getMinStopStationsUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_RoutePlanInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-plan-service
  /api/v1/routeplanservice/routePlan/quickestRoute:
    post:
      tags: [route-plan-controller, ts-route-plan-service]
      summary: getQuickestRoutes
      operationId: ts-route-plan-service_getQuickestRoutesUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_RoutePlanInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-plan-service
  /api/v1/routeplanservice/welcome:
    get:
      tags: [route-plan-controller, ts-route-plan-service]
      summary: home
      operationId: ts-route-plan-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-plan-service
  /api/v1/routeservice/routes:
    get:
      tags: [route-controller, ts-route-service]
      summary: queryAll
      operationId: ts-route-service_queryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
    post:
      tags: [route-controller, ts-route-service]
      summary: createAndModifyRoute
      operationId: ts-route-service_createAndModifyRouteUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_RouteInfo'
        description: createAndModifyRouteInfo
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
  /api/v1/routeservice/routes/byIds:
    post:
      tags: [route-controller, ts-route-service]
      summary: queryByIds
      operationId: ts-route-service_queryByIdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: routeIds
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
  /api/v1/routeservice/routes/{routeId}:
    get:
      tags: [route-controller, ts-route-service]
      summary: queryById
      operationId: ts-route-service_queryByIdUsingGET
      parameters:
      - name: routeId
        in: path
        description: routeId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
    delete:
      tags: [route-controller, ts-route-service]
      summary: deleteRoute
      operationId: ts-route-service_deleteRouteUsingDELETE
      parameters:
      - name: routeId
        in: path
        description: routeId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-route-service
  /api/v1/routeservice/routes/{start}/{end}:
    get:
      tags: [route-controller, ts-route-service]
      summary: queryByStartAndTerminal
      operationId: ts-route-service_queryByStartAndTerminalUsingGET
      parameters:
      - name: start
        in: path
        description: start
        required: true
        schema:
          type: string
      - name: end
        in: path
        description: end
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
  /api/v1/routeservice/welcome:
    get:
      tags: [route-controller, ts-route-service]
      summary: home
      operationId: ts-route-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-route-service
  /api/v1/seatservice/seats:
    post:
      tags: [seat-controller, ts-seat-service]
      summary: create
      operationId: ts-seat-service_createUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Seat'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-seat-service
  /api/v1/seatservice/seats/left_tickets:
    post:
      tags: [seat-controller, ts-seat-service]
      summary: getLeftTicketOfInterval
      operationId: ts-seat-service_getLeftTicketOfIntervalUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Seat'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-seat-service
  /api/v1/seatservice/welcome:
    get:
      tags: [seat-controller, ts-seat-service]
      summary: home
      operationId: ts-seat-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-seat-service
  /api/v1/securityservice/securityConfigs:
    get:
      tags: [security-controller, ts-security-service]
      summary: findAllSecurityConfig
      operationId: ts-security-service_findAllSecurityConfigUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-security-service
    post:
      tags: [security-controller, ts-security-service]
      summary: create
      operationId: ts-security-service_createUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_SecurityConfig'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-security-service
    put:
      tags: [security-controller, ts-security-service]
      summary: update
      operationId: ts-security-service_updateUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_SecurityConfig'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-security-service
  /api/v1/securityservice/securityConfigs/{accountId}:
    get:
      tags: [security-controller, ts-security-service]
      summary: check
      operationId: ts-security-service_checkUsingGET
      parameters:
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-security-service
  /api/v1/securityservice/securityConfigs/{id}:
    delete:
      tags: [security-controller, ts-security-service]
      summary: delete
      operationId: ts-security-service_deleteUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-security-service
  /api/v1/securityservice/welcome:
    get:
      tags: [security-controller, ts-security-service]
      summary: home
      operationId: ts-security-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-security-service
  /api/v1/stationfoodservice/stationfoodstores:
    get:
      tags: [station-food-controller, ts-station-food-service]
      summary: getAllFoodStores
      operationId: ts-station-food-service_getAllFoodStoresUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-food-service
    post:
      tags: [station-food-controller, ts-station-food-service]
      summary: getFoodStoresByStationNames
      operationId: ts-station-food-service_getFoodStoresByStationNamesUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: stationNameList
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-food-service
  /api/v1/stationfoodservice/stationfoodstores/bystoreid/{stationFoodStoreId}:
    get:
      tags: [station-food-controller, ts-station-food-service]
      summary: getFoodListByStationFoodStoreId
      operationId: 
        ts-station-food-service_getFoodListByStationFoodStoreIdUsingGET
      parameters:
      - name: stationFoodStoreId
        in: path
        description: stationFoodStoreId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-food-service
  /api/v1/stationfoodservice/stationfoodstores/welcome:
    get:
      tags: [station-food-controller, ts-station-food-service]
      summary: home
      operationId: ts-station-food-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-food-service
  /api/v1/stationfoodservice/stationfoodstores/{stationId}:
    get:
      tags: [station-food-controller, ts-station-food-service]
      summary: getFoodStoresOfStation
      operationId: ts-station-food-service_getFoodStoresOfStationUsingGET
      parameters:
      - name: stationName
        in: path
        description: stationName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-food-service
  /api/v1/stationservice/stations:
    get:
      tags: [station-controller, ts-station-service]
      summary: query
      operationId: ts-station-service_queryUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
    post:
      tags: [station-controller, ts-station-service]
      summary: create
      operationId: ts-station-service_createUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_Station'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
    put:
      tags: [station-controller, ts-station-service]
      summary: update
      operationId: ts-station-service_updateUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_Station'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/stationservice/stations/id/{stationNameForId}:
    get:
      tags: [station-controller, ts-station-service]
      summary: queryForStationId
      operationId: ts-station-service_queryForStationIdUsingGET
      parameters:
      - name: stationNameForId
        in: path
        description: stationNameForId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/stationservice/stations/idlist:
    post:
      tags: [station-controller, ts-station-service]
      summary: queryForIdBatch
      operationId: ts-station-service_queryForIdBatchUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: stationNameList
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/stationservice/stations/name/{stationIdForName}:
    get:
      tags: [station-controller, ts-station-service]
      summary: queryById
      operationId: ts-station-service_queryByIdUsingGET
      parameters:
      - name: stationIdForName
        in: path
        description: stationIdForName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/stationservice/stations/namelist:
    post:
      tags: [station-controller, ts-station-service]
      summary: queryForNameBatch
      operationId: ts-station-service_queryForNameBatchUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: stationIdList
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/stationservice/stations/{stationsId}:
    delete:
      tags: [station-controller, ts-station-service]
      summary: delete
      operationId: ts-station-service_deleteUsingDELETE
      parameters:
      - name: stationsId
        in: path
        description: stationsId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-station-service
  /api/v1/stationservice/welcome:
    get:
      tags: [station-controller, ts-station-service]
      summary: home
      operationId: ts-station-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-station-service
  /api/v1/trainfoodservice/trainfoods:
    get:
      tags: [train-food-controller, ts-train-food-service]
      summary: getAllTrainFood
      operationId: ts-train-food-service_getAllTrainFoodUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-food-service
  /api/v1/trainfoodservice/trainfoods/welcome:
    get:
      tags: [train-food-controller, ts-train-food-service]
      summary: home
      operationId: ts-train-food-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-food-service
  /api/v1/trainfoodservice/trainfoods/{tripId}:
    get:
      tags: [train-food-controller, ts-train-food-service]
      summary: getTrainFoodOfTrip
      operationId: ts-train-food-service_getTrainFoodOfTripUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-food-service
  /api/v1/trainservice/trains:
    get:
      tags: [train-controller, ts-train-service]
      summary: query
      operationId: ts-train-service_queryUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
    post:
      tags: [train-controller, ts-train-service]
      summary: create
      operationId: ts-train-service_createUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TrainType'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
    put:
      tags: [train-controller, ts-train-service]
      summary: update
      operationId: ts-train-service_updateUsingPUT
      requestBody:
        $ref: '#/components/requestBodies/api_TrainType'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
  /api/v1/trainservice/trains/byName/{name}:
    get:
      tags: [train-controller, ts-train-service]
      summary: retrieveByName
      operationId: ts-train-service_retrieveByNameUsingGET
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
  /api/v1/trainservice/trains/byNames:
    post:
      tags: [train-controller, ts-train-service]
      summary: retrieveByName
      operationId: ts-train-service_retrieveByNameUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: names
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
  /api/v1/trainservice/trains/welcome:
    get:
      tags: [train-controller, ts-train-service]
      summary: home
      operationId: ts-train-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
  /api/v1/trainservice/trains/{id}:
    get:
      tags: [train-controller, ts-train-service]
      summary: retrieve
      operationId: ts-train-service_retrieveUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-train-service
    delete:
      tags: [train-controller, ts-train-service]
      summary: delete
      operationId: ts-train-service_deleteUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-train-service
  /api/v1/travelplanservice/travelPlan/cheapest:
    post:
      tags: [travel-plan-controller, ts-travel-plan-service]
      summary: getByCheapest
      operationId: ts-travel-plan-service_getByCheapestUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TripInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-plan-service
  /api/v1/travelplanservice/travelPlan/minStation:
    post:
      tags: [travel-plan-controller, ts-travel-plan-service]
      summary: getByMinStation
      operationId: ts-travel-plan-service_getByMinStationUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TripInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-plan-service
  /api/v1/travelplanservice/travelPlan/quickest:
    post:
      tags: [travel-plan-controller, ts-travel-plan-service]
      summary: getByQuickest
      operationId: ts-travel-plan-service_getByQuickestUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TripInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-plan-service
  /api/v1/travelplanservice/travelPlan/transferResult:
    post:
      tags: [travel-plan-controller, ts-travel-plan-service]
      summary: getTransferResult
      operationId: ts-travel-plan-service_getTransferResultUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TransferTravelInfo'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-plan-service
  /api/v1/travelplanservice/welcome:
    get:
      tags: [travel-plan-controller, ts-travel-plan-service]
      summary: home
      operationId: ts-travel-plan-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-plan-service
  /api/v1/travelservice/admin_trip:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: adminQueryAll
      operationId: ts-travel-service_adminQueryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/routes/{tripId}:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: getRouteByTripId
      operationId: ts-travel-service_getRouteByTripIdUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/train_types/{tripId}:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: getTrainTypeByTripId
      operationId: ts-travel-service_getTrainTypeByTripIdUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trip_detail:
    post:
      tags: [travel-controller, ts-travel-service]
      summary: getTripAllDetailInfo
      operationId: ts-travel-service_getTripAllDetailInfoUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TripAllDetailInfo'
        description: gtdi
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trips:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: queryAll
      operationId: ts-travel-service_queryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
    post:
      tags: [travel-controller, ts-travel-service]
      summary: createTrip
      operationId: ts-travel-service_createTripUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TravelInfo'
        description: routeIds
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
    put:
      tags: [travel-controller, ts-travel-service]
      summary: updateTrip
      operationId: ts-travel-service_updateTripUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TravelInfo'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trips/left:
    post:
      tags: [travel-controller, ts-travel-service]
      summary: queryInfo
      operationId: ts-travel-service_queryInfoUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TripInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trips/left_parallel:
    post:
      tags: [travel-controller, ts-travel-service]
      summary: queryInfoInparallel
      operationId: ts-travel-service_queryInfoInparallelUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/api_TripInfo'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trips/routes:
    post:
      tags: [travel-controller, ts-travel-service]
      summary: getTripsByRouteId
      operationId: ts-travel-service_getTripsByRouteIdUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: routeIds
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travelservice/trips/{tripId}:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: retrieve
      operationId: ts-travel-service_retrieveUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
    delete:
      tags: [travel-controller, ts-travel-service]
      summary: deleteTrip
      operationId: ts-travel-service_deleteTripUsingDELETE
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-travel-service
  /api/v1/travelservice/welcome:
    get:
      tags: [travel-controller, ts-travel-service]
      summary: home
      operationId: ts-travel-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel-service
  /api/v1/travel2service/admin_trip:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: adminQueryAll
      operationId: ts-travel2-service_adminQueryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/routes/{tripId}:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: getRouteByTripId
      operationId: ts-travel2-service_getRouteByTripIdUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/train_types/{tripId}:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: getTrainTypeByTripId
      operationId: ts-travel2-service_getTrainTypeByTripIdUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/trip_detail:
    post:
      tags: [travel-2-controller, ts-travel2-service]
      summary: getTripAllDetailInfo
      operationId: ts-travel2-service_getTripAllDetailInfoUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TripAllDetailInfo'
        description: gtdi
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/trips:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: queryAll
      operationId: ts-travel2-service_queryAllUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
    post:
      tags: [travel-2-controller, ts-travel2-service]
      summary: createTrip
      operationId: ts-travel2-service_createTripUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TravelInfo'
        description: routeIds
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
    put:
      tags: [travel-2-controller, ts-travel2-service]
      summary: updateTrip
      operationId: ts-travel2-service_updateTripUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TravelInfo'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/trips/left:
    post:
      tags: [travel-2-controller, ts-travel2-service]
      summary: queryInfo
      operationId: ts-travel2-service_queryInfoUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_TripInfo'
        description: info
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/trips/routes:
    post:
      tags: [travel-2-controller, ts-travel2-service]
      summary: getTripsByRouteId
      operationId: ts-travel2-service_getTripsByRouteIdUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: routeIds
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/travel2service/trips/{tripId}:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: retrieve
      operationId: ts-travel2-service_retrieveUsingGET
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
    delete:
      tags: [travel-2-controller, ts-travel2-service]
      summary: deleteTrip
      operationId: ts-travel2-service_deleteTripUsingDELETE
      parameters:
      - name: tripId
        in: path
        description: tripId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-travel2-service
  /api/v1/travel2service/welcome:
    get:
      tags: [travel-2-controller, ts-travel2-service]
      summary: home
      operationId: ts-travel2-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-travel2-service
  /api/v1/userservice/users:
    get:
      tags: [user-controller, ts-user-service]
      summary: getAllUser
      operationId: ts-user-service_getAllUserUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
    put:
      tags: [user-controller, ts-user-service]
      summary: updateUser
      operationId: ts-user-service_updateUserUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_UserDto'
        description: user
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
  /api/v1/userservice/users/hello:
    get:
      tags: [user-controller, ts-user-service]
      summary: testHello
      operationId: ts-user-service_testHelloUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
  /api/v1/userservice/users/id/{userId}:
    get:
      tags: [user-controller, ts-user-service]
      summary: getUserByUserId
      operationId: ts-user-service_getUserByUserIdUsingGET
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
  /api/v1/userservice/users/register:
    post:
      tags: [user-controller, ts-user-service]
      summary: registerUser
      operationId: ts-user-service_registerUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_UserDto'
        description: userDto
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
  /api/v1/userservice/users/{userId}:
    delete:
      tags: [user-controller, ts-user-service]
      summary: deleteUserById
      operationId: ts-user-service_deleteUserByIdUsingDELETE
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      x-service-name: ts-user-service
  /api/v1/userservice/users/{userName}:
    get:
      tags: [user-controller, ts-user-service]
      summary: getUserByUserName
      operationId: ts-user-service_getUserByUserNameUsingGET
      parameters:
      - name: userName
        in: path
        description: userName
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-user-service
  /api/v1/waitorderservice/order:
    post:
      tags: [wait-list-order-controller, ts-wait-order-service]
      summary: createNewOrder
      operationId: ts-wait-order-service_createNewOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_WaitListOrderVO'
        description: createOrder
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /api/v1/waitorderservice/orders:
    get:
      tags: [wait-list-order-controller, ts-wait-order-service]
      summary: getAllOrders
      operationId: ts-wait-order-service_getAllOrdersUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /api/v1/waitorderservice/waitlistorders:
    get:
      tags: [wait-list-order-controller, ts-wait-order-service]
      summary: getWaitListOrders
      operationId: ts-wait-order-service_getWaitListOrdersUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_HttpEntity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
  /api/v1/waitorderservice/welcome:
    get:
      tags: [wait-list-order-controller, ts-wait-order-service]
      summary: home
      operationId: ts-wait-order-service_homeUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      x-service-name: ts-wait-order-service
components:
  schemas:
    ts-admin-basic-info-service_Station:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        stayTime:
          type: integer
          format: int32
    ts-admin-basic-info-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-admin-basic-info-service_Contacts:
      type: object
      properties:
        accountId:
          type: string
        documentNumber:
          type: string
        documentType:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
    ts-admin-basic-info-service_Config:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        value:
          type: string
    ts-admin-basic-info-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-admin-basic-info-service_TrainType:
      type: object
      properties:
        averageSpeed:
          type: integer
          format: int32
        confortClass:
          type: integer
          format: int32
        economyClass:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
    ts-admin-basic-info-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-admin-basic-info-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-admin-basic-info-service_PriceInfo:
      type: object
      properties:
        basicPriceRate:
          type: number
          format: double
        firstClassPriceRate:
          type: number
          format: double
        id:
          type: string
        routeId:
          type: string
        trainType:
          type: string
    ts-admin-basic-info-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-admin-order-service_Order:
      type: object
      properties:
        accountId:
          type: string
        boughtDate:
          type: string
        coachNumber:
          type: integer
          format: int32
        contactsDocumentNumber:
          type: string
        contactsName:
          type: string
        differenceMoney:
          type: string
        documentType:
          type: integer
          format: int32
        from:
          type: string
        id:
          type: string
        price:
          type: string
        seatClass:
          type: integer
          format: int32
        seatNumber:
          type: string
        status:
          type: integer
          format: int32
        to:
          type: string
        trainNumber:
          type: string
        travelDate:
          type: string
        travelTime:
          type: string
    ts-admin-order-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-admin-order-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-admin-order-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-admin-order-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-admin-order-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-admin-route-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-admin-route-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-admin-route-service_RouteInfo:
      type: object
      properties:
        distanceList:
          type: string
        distances:
          type: array
          items:
            type: string
        endStation:
          type: string
        id:
          type: string
        loginId:
          type: string
        startStation:
          type: string
        stationList:
          type: string
        stations:
          type: array
          items:
            type: string
    ts-admin-route-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-admin-route-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-admin-route-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-admin-travel-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-admin-travel-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-admin-travel-service_TravelInfo:
      type: object
      properties:
        endTime:
          type: string
        loginId:
          type: string
        routeId:
          type: string
        startStationName:
          type: string
        startTime:
          type: string
        stationsName:
          type: string
        terminalStationName:
          type: string
        trainTypeName:
          type: string
        tripId:
          type: string
    ts-admin-travel-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-admin-travel-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-admin-travel-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-admin-user-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-admin-user-service_UserDto:
      type: object
      properties:
        documentNum:
          type: string
        documentType:
          type: integer
          format: int32
        email:
          type: string
        gender:
          type: integer
          format: int32
        password:
          type: string
        userId:
          type: string
        userName:
          type: string
    ts-admin-user-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-admin-user-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-admin-user-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-admin-user-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-assurance-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-assurance-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-assurance-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-assurance-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-assurance-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-basic-service_Travel:
      type: object
      properties:
        departureTime:
          type: string
        endPlace:
          type: string
        startPlace:
          type: string
        trip:
          $ref: '#/components/schemas/Trip'
    ts-basic-service_Trip:
      type: object
      properties:
        endTime:
          type: string
        id:
          type: string
        routeId:
          type: string
        startStationName:
          type: string
        startTime:
          type: string
        stationsName:
          type: string
        terminalStationName:
          type: string
        trainTypeName:
          type: string
        tripId:
          $ref: '#/components/schemas/TripId'
    ts-basic-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-basic-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-basic-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-basic-service_TripId:
      type: object
      properties:
        number:
          type: string
        type:
          type: string
          enum:
          - G
          - D
          - Z
          - T
          - K
    ts-basic-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-basic-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-cancel-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-cancel-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-cancel-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-cancel-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-cancel-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-config-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-config-service_Config:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        value:
          type: string
    ts-config-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-config-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-config-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-config-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-consign-price-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-consign-price-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-consign-price-service_ConsignPrice:
      type: object
      properties:
        beyondPrice:
          type: number
          format: double
        id:
          type: string
        index:
          type: integer
          format: int32
        initialPrice:
          type: number
          format: double
        initialWeight:
          type: number
          format: double
        withinPrice:
          type: number
          format: double
    ts-consign-price-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-consign-price-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-consign-price-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-consign-service_Consign:
      type: object
      properties:
        accountId:
          type: string
        consignee:
          type: string
        from:
          type: string
        handleDate:
          type: string
        id:
          type: string
        orderId:
          type: string
        phone:
          type: string
        targetDate:
          type: string
        to:
          type: string
        weight:
          type: number
          format: double
        within:
          type: boolean
    ts-consign-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-consign-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-consign-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-consign-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-consign-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-contacts-service_Response:
      type: object
      properties:
        data:
          type: object
        msg:
          type: string
        status:
          type: integer
          format: int32
    ts-contacts-service_Contacts:
      type: object
      properties:
        accountId:
          type: string
        documentNumber:
          type: string
        documentType:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
    ts-contacts-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-contacts-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-contacts-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-contacts-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-contacts-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-execute-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-execute-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-execute-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-execute-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-execute-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-food-delivery-service_SeatInfo:
      type: object
      properties:
        orderId:
          type: string
        seatNo:
          type: integer
          format: int32
    ts-food-delivery-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-food-delivery-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-food-delivery-service_TripOrderInfo:
      type: object
      properties:
        orderId:
          type: string
        tripId:
          type: string
    ts-food-delivery-service_FoodDeliveryOrder:
      type: object
      properties:
        createdTime:
          type: string
        deliveryFee:
          type: number
          format: double
        deliveryTime:
          type: string
        foodList:
          type: array
          items:
            $ref: '#/components/schemas/Food'
        id:
          type: string
        seatNo:
          type: integer
          format: int32
        stationFoodStoreId:
          type: string
        tripId:
          type: string
    ts-food-delivery-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-food-delivery-service_DeliveryInfo:
      type: object
      properties:
        deliveryTime:
          type: string
        orderId:
          type: string
    ts-food-delivery-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-food-delivery-service_Food:
      type: object
      properties:
        foodName:
          type: string
        price:
          type: number
          format: double
    ts-food-delivery-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-food-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-food-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-food-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-food-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-food-service_FoodOrder:
      type: object
      properties:
        foodName:
          type: string
        foodType:
          type: integer
          format: int32
        id:
          type: string
        orderId:
          type: string
        price:
          type: number
          format: double
        stationName:
          type: string
        storeName:
          type: string
    ts-food-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-inside-payment-service_PaymentInfo:
      type: object
      properties:
        orderId:
          type: string
        price:
          type: string
        tripId:
          type: string
        userId:
          type: string
    ts-inside-payment-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-inside-payment-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-inside-payment-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-inside-payment-service_AccountInfo:
      type: object
      properties:
        money:
          type: string
        userId:
          type: string
    ts-inside-payment-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-inside-payment-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-notification-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-notification-service_NotifyInfo:
      type: object
      properties:
        date:
          type: string
        email:
          type: string
        endPlace:
          type: string
        id:
          type: string
        orderNumber:
          type: string
        price:
          type: string
        seatClass:
          type: string
        seatNumber:
          type: string
        sendStatus:
          type: boolean
        startPlace:
          type: string
        startTime:
          type: string
        username:
          type: string
    ts-notification-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-notification-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-notification-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-order-other-service_Order:
      type: object
      properties:
        accountId:
          type: string
        boughtDate:
          type: string
        coachNumber:
          type: integer
          format: int32
        contactsDocumentNumber:
          type: string
        contactsName:
          type: string
        documentType:
          type: integer
          format: int32
        from:
          type: string
        id:
          type: string
        price:
          type: string
        seatClass:
          type: integer
          format: int32
        seatNumber:
          type: string
        status:
          type: integer
          format: int32
        to:
          type: string
        trainNumber:
          type: string
        travelDate:
          type: string
        travelTime:
          type: string
    ts-order-other-service_Seat:
      type: object
      properties:
        destStation:
          type: string
        seatType:
          type: integer
          format: int32
        startStation:
          type: string
        stations:
          type: array
          items:
            type: string
        totalNum:
          type: integer
          format: int32
        trainNumber:
          type: string
        travelDate:
          type: string
    ts-order-other-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-order-other-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-order-other-service_QueryInfo:
      type: object
      properties:
        boughtDateEnd:
          type: string
        boughtDateStart:
          type: string
        enableBoughtDateQuery:
          type: boolean
        enableStateQuery:
          type: boolean
        enableTravelDateQuery:
          type: boolean
        loginId:
          type: string
        state:
          type: integer
          format: int32
        travelDateEnd:
          type: string
        travelDateStart:
          type: string
    ts-order-other-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-order-other-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-order-other-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-order-service_Order:
      type: object
      properties:
        accountId:
          type: string
        boughtDate:
          type: string
        coachNumber:
          type: integer
          format: int32
        contactsDocumentNumber:
          type: string
        contactsName:
          type: string
        documentType:
          type: integer
          format: int32
        from:
          type: string
        id:
          type: string
        price:
          type: string
        seatClass:
          type: integer
          format: int32
        seatNumber:
          type: string
        status:
          type: integer
          format: int32
        to:
          type: string
        trainNumber:
          type: string
        travelDate:
          type: string
        travelTime:
          type: string
    ts-order-service_Seat:
      type: object
      properties:
        destStation:
          type: string
        seatType:
          type: integer
          format: int32
        startStation:
          type: string
        stations:
          type: array
          items:
            type: string
        totalNum:
          type: integer
          format: int32
        trainNumber:
          type: string
        travelDate:
          type: string
    ts-order-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-order-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-order-service_OrderInfo:
      type: object
      properties:
        boughtDateEnd:
          type: string
        boughtDateStart:
          type: string
        enableBoughtDateQuery:
          type: boolean
        enableStateQuery:
          type: boolean
        enableTravelDateQuery:
          type: boolean
        loginId:
          type: string
        state:
          type: integer
          format: int32
        travelDateEnd:
          type: string
        travelDateStart:
          type: string
    ts-order-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-order-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-order-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-payment-service_Payment:
      type: object
      properties:
        id:
          type: string
        orderId:
          type: string
        price:
          type: string
        userId:
          type: string
    ts-payment-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-payment-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-payment-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-payment-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-payment-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-preserve-other-service_OrderTicketsInfo:
      type: object
      properties:
        accountId:
          type: string
        assurance:
          type: integer
          format: int32
        consigneeName:
          type: string
        consigneePhone:
          type: string
        consigneeWeight:
          type: number
          format: double
        contactsId:
          type: string
        date:
          type: string
        foodName:
          type: string
        foodPrice:
          type: number
          format: double
        foodType:
          type: integer
          format: int32
        from:
          type: string
        handleDate:
          type: string
        loginToken:
          type: string
        seatType:
          type: integer
          format: int32
        stationName:
          type: string
        storeName:
          type: string
        to:
          type: string
        tripId:
          type: string
        within:
          type: boolean
    ts-preserve-other-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-preserve-other-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-preserve-other-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-preserve-other-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-preserve-other-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-preserve-service_OrderTicketsInfo:
      type: object
      properties:
        accountId:
          type: string
        assurance:
          type: integer
          format: int32
        consigneeName:
          type: string
        consigneePhone:
          type: string
        consigneeWeight:
          type: number
          format: double
        contactsId:
          type: string
        date:
          type: string
        foodName:
          type: string
        foodPrice:
          type: number
          format: double
        foodType:
          type: integer
          format: int32
        from:
          type: string
        handleDate:
          type: string
        loginToken:
          type: string
        seatType:
          type: integer
          format: int32
        stationName:
          type: string
        storeName:
          type: string
        to:
          type: string
        tripId:
          type: string
        within:
          type: boolean
    ts-preserve-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-preserve-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-preserve-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-preserve-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-preserve-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-price-service_PriceConfig:
      type: object
      properties:
        basicPriceRate:
          type: number
          format: double
        firstClassPriceRate:
          type: number
          format: double
        id:
          type: string
        routeId:
          type: string
        trainType:
          type: string
    ts-price-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-price-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-price-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-price-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-price-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-rebook-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-rebook-service_RebookInfo:
      type: object
      properties:
        date:
          type: string
        loginId:
          type: string
        oldTripId:
          type: string
        orderId:
          type: string
        seatType:
          type: integer
          format: int32
        tripId:
          type: string
    ts-rebook-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-rebook-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-rebook-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-rebook-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-route-plan-service_RoutePlanInfo:
      type: object
      properties:
        endStation:
          type: string
        num:
          type: integer
          format: int32
        startStation:
          type: string
        travelDate:
          type: string
    ts-route-plan-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-route-plan-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-route-plan-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-route-plan-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-route-plan-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-route-service_Response:
      type: object
      properties:
        data:
          type: object
        msg:
          type: string
        status:
          type: integer
          format: int32
    ts-route-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-route-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-route-service_RouteInfo:
      type: object
      properties:
        distanceList:
          type: string
        endStation:
          type: string
        id:
          type: string
        startStation:
          type: string
        stationList:
          type: string
    ts-route-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-route-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-route-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-seat-service_Seat:
      type: object
      properties:
        destStation:
          type: string
        seatType:
          type: integer
          format: int32
        startStation:
          type: string
        stations:
          type: array
          items:
            type: string
        totalNum:
          type: integer
          format: int32
        trainNumber:
          type: string
        travelDate:
          type: string
    ts-seat-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-seat-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-seat-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-seat-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-seat-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-security-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-security-service_SecurityConfig:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        value:
          type: string
    ts-security-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-security-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-security-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-security-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-station-food-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-station-food-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-station-food-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-station-food-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-station-food-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-station-service_Response:
      type: object
      properties:
        data:
          type: object
        msg:
          type: string
        status:
          type: integer
          format: int32
    ts-station-service_Station:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        stayTime:
          type: integer
          format: int32
    ts-station-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-station-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-station-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-station-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-station-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-train-food-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-train-food-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-train-food-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-train-food-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-train-food-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-train-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-train-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-train-service_TrainType:
      type: object
      properties:
        averageSpeed:
          type: integer
          format: int32
        confortClass:
          type: integer
          format: int32
        economyClass:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
    ts-train-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-train-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-train-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-travel-plan-service_TripInfo:
      type: object
      properties:
        departureTime:
          type: string
        endPlace:
          type: string
        startPlace:
          type: string
    ts-travel-plan-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-travel-plan-service_TransferTravelInfo:
      type: object
      properties:
        endStation:
          type: string
        startStation:
          type: string
        trainType:
          type: string
        travelDate:
          type: string
        viaStation:
          type: string
    ts-travel-plan-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-travel-plan-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-travel-plan-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-travel-plan-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-travel-service_TripInfo:
      type: object
      properties:
        departureTime:
          type: string
        endPlace:
          type: string
        startPlace:
          type: string
    ts-travel-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-travel-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-travel-service_TripAllDetailInfo:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        travelDate:
          type: string
        tripId:
          type: string
    ts-travel-service_TravelInfo:
      type: object
      properties:
        endTime:
          type: string
        loginId:
          type: string
        routeId:
          type: string
        startStationName:
          type: string
        startTime:
          type: string
        stationsName:
          type: string
        terminalStationName:
          type: string
        trainTypeName:
          type: string
        tripId:
          type: string
    ts-travel-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-travel-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-travel-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-travel2-service_TripInfo:
      type: object
      properties:
        departureTime:
          type: string
        endPlace:
          type: string
        startPlace:
          type: string
    ts-travel2-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-travel2-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-travel2-service_TripAllDetailInfo:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        travelDate:
          type: string
        tripId:
          type: string
    ts-travel2-service_TravelInfo:
      type: object
      properties:
        endTime:
          type: string
        loginId:
          type: string
        routeId:
          type: string
        startStationName:
          type: string
        startTime:
          type: string
        stationsName:
          type: string
        terminalStationName:
          type: string
        trainTypeName:
          type: string
        tripId:
          type: string
    ts-travel2-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-travel2-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-travel2-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-user-service_Response:
      type: object
      properties:
        data:
          type: object
        msg:
          type: string
        status:
          type: integer
          format: int32
    ts-user-service_UserDto:
      type: object
      properties:
        documentNum:
          type: string
        documentType:
          type: integer
          format: int32
        email:
          type: string
        gender:
          type: integer
          format: int32
        password:
          type: string
        userId:
          type: string
        userName:
          type: string
    ts-user-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-user-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-user-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-user-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    ts-wait-order-service_WaitListOrderVO:
      type: object
      properties:
        accountId:
          type: string
        contactsId:
          type: string
        date:
          type: string
          format: date-time
        from:
          type: string
        price:
          type: string
        seatType:
          type: integer
          format: int32
        to:
          type: string
        tripId:
          type: string
    ts-wait-order-service_HttpEntity:
      type: object
      properties:
        body:
          type: object
    ts-wait-order-service_ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    ts-wait-order-service_View:
      type: object
      properties:
        contentType:
          type: string
    ts-wait-order-service_Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
    ts-wait-order-service_Map_string_Link_:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
  requestBodies:
    ts-admin-basic-info-service_PriceInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PriceInfo'
      description: pi
      required: true
    ts-admin-basic-info-service_TrainType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainType'
      description: t
      required: true
    ts-admin-basic-info-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-admin-basic-info-service_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Config'
      description: c
      required: true
    ts-admin-basic-info-service_Station:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Station'
      description: s
      required: true
    ts-admin-order-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-admin-order-service_Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
      description: request
      required: true
    ts-admin-route-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-admin-travel-service_TravelInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TravelInfo'
      description: request
      required: true
    ts-admin-travel-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-admin-user-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-admin-user-service_UserDto:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDto'
      description: userDto
      required: true
    ts-assurance-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-basic-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-cancel-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-config-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-config-service_Config:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Config'
      description: info
      required: true
    ts-consign-price-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-consign-service_Consign:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consign'
      description: request
      required: true
    ts-consign-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-contacts-service_Contacts:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contacts'
      description: aci
      required: true
    ts-contacts-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-execute-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-food-delivery-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-food-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-inside-payment-service_PaymentInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentInfo'
      description: info
      required: true
    ts-inside-payment-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-notification-service_NotifyInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotifyInfo'
      description: info
      required: true
    ts-notification-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-order-other-service_QueryInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryInfo'
      description: qi
      required: true
    ts-order-other-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-order-other-service_Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
      description: order
      required: true
    ts-order-service_OrderInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderInfo'
      description: qi
      required: true
    ts-order-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-order-service_Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
      description: order
      required: true
    ts-payment-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-payment-service_Payment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Payment'
      description: info
      required: true
    ts-preserve-other-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-preserve-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-price-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-price-service_PriceConfig:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PriceConfig'
      description: info
      required: true
    ts-rebook-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-rebook-service_RebookInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RebookInfo'
      description: info
      required: true
    ts-route-plan-service_RoutePlanInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoutePlanInfo'
      description: info
      required: true
    ts-route-plan-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-route-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-seat-service_Seat:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Seat'
      description: seatRequest
      required: true
    ts-seat-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-security-service_SecurityConfig:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityConfig'
      description: info
      required: true
    ts-security-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-station-food-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-station-service_Station:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Station'
      description: station
      required: true
    ts-station-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-train-food-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-train-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-train-service_TrainType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainType'
      description: trainType
      required: true
    ts-travel-plan-service_TripInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TripInfo'
      description: queryInfo
      required: true
    ts-travel-plan-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-travel-service_TripInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TripInfo'
      description: info
      required: true
    ts-travel-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-travel2-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-user-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
    ts-wait-order-service_handleUsingGET_1Body:
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: string
      description: body
  responses: {}
  parameters: {}
  examples: {}
  headers: {}
  securitySchemes: {}
