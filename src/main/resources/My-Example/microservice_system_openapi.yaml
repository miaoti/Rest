openapi: 3.0.3
info:
  title: Inventory Microservice API
  version: 1.0.0
  description: |
    This API manages an inventory of products.  
    You can list, create, retrieve, update, and delete products.
  contact:
    name: API Support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: http://localhost:8080/v1
    description: Local development server
tags:
  - name: Products
    description: Operations on products in the inventory

paths:
  /products:
    get:
      tags:
        - Products
      summary: List all products
      description: Retrieves a paginated list of products.
      parameters:
        - name: page
          in: query
          description: Page number (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: category
          in: query
          description: Filter products by category
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  size:
                    type: integer
                    example: 20
                  totalItems:
                    type: integer
                    example: 150
                  totalPages:
                    type: integer
                    example: 8
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Create a new product
      description: Adds a new product to the inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{productId}:
    parameters:
      - name: productId
        in: path
        description: Unique identifier for the product
        required: true
        schema:
          type: string
          pattern: '^[A-Za-z0-9\-]+$'
          example: 'prd-001'
    get:
      tags:
        - Products
      summary: Get a product by ID
      responses:
        '200':
          description: The requested product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Products
      summary: Update a product
      description: Updates name, description or price of an existing product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Products
      summary: Delete a product
      description: Removes a product from the inventory.
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: 'prd-001'
        name:
          type: string
          example: 'Wireless Mouse'
        description:
          type: string
          example: 'A smooth, ergonomic wireless mouse'
        price:
          type: number
          format: float
          minimum: 0.0
          example: 29.99
        category:
          type: string
          example: 'electronics'
        inStock:
          type: integer
          minimum: 0
          example: 150
      required:
        - id
        - name
        - price

    NewProduct:
      type: object
      properties:
        name:
          type: string
          example: 'Wireless Mouse'
        description:
          type: string
          example: 'A smooth, ergonomic wireless mouse'
        price:
          type: number
          format: float
          minimum: 0.0
          example: 29.99
        category:
          type: string
          example: 'electronics'
        inStock:
          type: integer
          minimum: 0
          example: 150
      required:
        - name
        - price

    UpdateProduct:
      type: object
      properties:
        name:
          type: string
          example: 'Wireless Mouse Pro'
        description:
          type: string
          example: 'An upgraded ergonomic wireless mouse with extra buttons'
        price:
          type: number
          format: float
          minimum: 0.0
          example: 39.99
        category:
          type: string
          example: 'electronics'
        inStock:
          type: integer
          minimum: 0
          example: 120
      additionalProperties: false

    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: 'Invalid request parameters'
