# =================================
# Basic configuration for RESTest
# =================================

# Path to the directory where RESTest will save the generated test cases
test.target.dir=src/generation/java/restassured

# Experiment name (string used to identify the artefacts generated by RESTest in this execution)
experiment.name=restassured

# Set to true for executing the generated test cases. Set to false for generating test cases only.
experiment.execute=true

# Test case generation strategy (RT: Random Testing, CBT: Combinatorial Testing, ART: Adaptive Random Testing, FT: Fuzzing)
generator=RT

# Number of test cases to be generated per operation
testsperoperation=10

# Number of the class containing the test cases to be generated
testclass.name=RESTestExperiment

# Package name for the generted test class
test.target.package=restest

# Set to true for deleting the previous test cases generated by RESTest
deletepreviousresults=true

# Maximum number of test cases to be generated (-1 for infinite loop)
numtotaltestcases=-1

# Delay between requests in seconds (-1 for no delay)
delay=-1

# Ratio of faulty test cases to generate, due to the violation of an individual constraint (ex. excluding a required parameter).
faulty.ratio=0.1

# Set to true for validating the test cases with OASValidator before executing them
testcases.check=false

# Proxy to use for all requests in format host:port
proxy=null

# =================================
# CONSTRAINT-BASED TESTING (CBT)
# =================================

# Ratio of faulty test cases to generate due to the violation of inter-parameter dependencies
faulty.dependency.ratio=0.5

# Number of requests using the same randomly generated input data
reloadinputdataevery=100

# Number of values used for each parameter when reloading input data
inputdatamaxvalues=1000



# =================================
# ADAPTIVE RANDOM TESTING (ART)
# =================================

# Similarity metric used for measuring the distance among test cases (LEVENSHTEIN: Levenshtein distance, JACCARD: Jaccard index, JARO_WINKLER: Jaro-Winkler distance)
similarity.metric=LEVENSHTEIN

# Number of candidates to be considered for each test case
art.number.candidates=100

# =================================
# LOGGING
# =================================

# Set to true for generating logs
logToFile=false

# Path to the directory where RESTest will save the logs
data.log.dir=target/log

# Name of the file containing the logs
data.log.file=log


# =================
# ALLURE REPORTS
# =================

# Set to true for generating Allure reports
allure.report=true

# Path to the directory where Allure will save test results (used for generating test reports)
allure.results.dir=target/allure-results

# Path to the directory where Allure will save the report
allure.report.dir=target/allure-reports

# Command to execute Allure in Windows
allure.command.windows=allure/bin/allure.bat

# Command to execute Allure in Unix
allure.command.unix=allure/bin/allure

# Path to the file containing the categories for Allure (used to classify the detected failures)
allure.categories.path=src/main/resources/allure-categories.json

# ===================
# COVERAGE REPORTS
# ===================

# Set to true for computing input coverage
coverage.input=false

# Set to true for computing output coverage
coverage.output=false

# Path to the directory where coverage results will be saved (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.coverage.dir=target/coverage-data

# Path to the file containing the input coverage (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.coverage.computation.priori.file=test-coverage-priori

# Path to the file containing the output coverage (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.coverage.computation.posteriori.file=test-coverage-posteriori

# ==================
# CSV STATS REPORTS
# ==================

# Set to true for generating CSV stats
stats.csv=true

# Path to the directory where CSV stats will be generated (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.tests.dir=target/test-data

# Name of the file containing the test cases statistics in CSV format (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.tests.testcases.file=test-cases

# Name of the file containing the test results statistics in CSV format (DO NOT OVERWRITE IN USER PROPERTY FILE)
data.tests.testresults.file=test-results

# Path to the time statistics in CSV format
data.tests.time=time.csv

# =======================================
# TEST OUTPUT VALIDATION IN RESTASSURED
# =====================================

# set to true for validating body outputs
response.body.analysis=true

# set to true for limiting the size of the body to be validated
response.body.limit=true

# Maximum size of the body to be validated (in bytes)
response.body.size=5000000